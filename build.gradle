plugins {
    id 'idea'
    id 'eclipse'
    id 'com.github.hierynomus.license' version '0.16.1'
    id 'java-library'
    id 'maven-publish'
}

group 'io.github.nucleuspowered'
def artifactName = "neutrino"
version '1.1.7-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name 'Sponge maven repo'
        url 'https://repo.spongepowered.org/maven'
    }
}

dependencies {
    api "org.spongepowered:configurate-core:3.7.1"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

    testImplementation group: 'junit', name: 'junit', version: '4.11'
    testImplementation "org.mockito:mockito-all:1.10.19"
}

defaultTasks 'licenseFormat build'

license {
    ext.name = "Neutrino"

    exclude "**/*.info"
    exclude "assets/**"
    exclude "*.properties"
    exclude "*.txt"

    header file('HEADER.txt')
    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = group
            artifactId = artifactName
            version = version
        }
    }

    repositories {
        def githubToken = System.getenv("GITHUB_TOKEN")
        if (githubToken != null) {
            maven {
                name = "GitHubPackages"
                url = project.uri(project.property("ghUri") + project.property("ghSlug"))
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = githubToken
                }
            }
        }

        def artifactoryToken = System.getenv("ARTIFACTORY_TOKEN")
        if (artifactoryToken != null) {
            maven {
                name = "Artifactory"
                url = project.uri(System.getenv("ARTIFACTORY_URL"))
                credentials {
                    username = System.getenv("ARTIFACTORY_USER")
                    password = artifactoryToken
                }
            }
        }
    }
}